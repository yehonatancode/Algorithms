int[][]helpMat(mat[][]h[m,n]

h[0][0]=m[0][0]
for(i=1 to m-1
h[i][0]=h[i-1][0]+mat[i][0]

for(j=1 to n-1)
h[0][j]=h[0][j-1]+mat[0][j]

for i =1 to m-1
for j=1 to n-1
h[i][j]=m[i][j]+h[i-1][j]+h[i][j-1] - h[i-1][j-1]
return h;

int sum_ij_pq(help[][],i,j,p,q){
if (i==0 && j==0) sum =h[p][q]
else if (i==0 && j>0) sum = h[p,q] - h[p,j-1]
else if(i>0 && j==0) sum = h[p,q]-h[i-1,q]
else sum = h[p,q] - h[p,j-1] - h[i-1,q] + h[i-1,j-1]
return sum;


int matrixSuperBestON3(int [][]mat)
help[][]=helpMat(mat)
max=help[0,0]
for i=0 to m-1
for p=i to m-1
j=0
for q=0 to n-1
t=sum_ij_pq(help,i,j,p,q)
if(t<0)j=q+1
else if(t>max)max=t;

return max;